Static website: 
=> Only display of content , not change content on run time.
=> No database , no server side scripting.
=> We can change the content not frequently.
Dynamic website:
=> Display of content and change content on run time.
=> Database , server side scripting.



********************CMS*********************

=> CMS is used for the pre-built-in backend development and database management with some limitations.
=> It is used for the rapid development of the website with the help of pre-built-in templates and plugins.
=> In cms we only make the design of word press and make changes in it in the dashboard of cms.
=> World most famous cms is wordpress development.
=> In wordpress , we make the ui or design of our website in the word press dashboard with limitations.
=> wordpress cms controls dashboard ul backend , server and database management at the same time so that its performance is very poor.


************What-we-want?*****************
=>Now we want that frontend(ui /design) is not linked with CMS . This is called headless CMS.
=> headless CMS only manages two modules (server+database)
=> A headless CMS is a content management system that separates the presentation layer (where content is presented) from the backend (where content is managed).
A headless CMS allows you to manage content in one place and be able to deploy that content on any digital channel you choose.

=> Traditional cms : frontend + backend + database
=> headless cms : backend + database



Note : 
Next.js can also connect with the traditional cms (IN this case , we are not using the ui of cms)
=> In the real software development system we use almost all the approaches: 
    like : traditional cms , next.js frontend ,  custom apis (backend server) , prebuilt-in api.



******************contentful CMS***************
=> home
=> content models (create different models of website like contact , blogs , services , projects)
=> content (content entry in content models)
=> media
=> Apps 


=> How to connect the content models of contentful with our next.js app?
=> Contentfull cms provides us the contentful library which fetch the apis 
=> We need to use the contentful library 
=> rest api or stk (Software development kit)
=> We need to install the contentful package in our next.js app.
=> Then we need to import the contentful package in our next.js pages.
=> Then we need to use the contentful api to fetch the data from the contentful cms.





